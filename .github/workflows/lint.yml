name: Lint

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  eslint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Get changed files
        id: changed-files
        uses: jitterbit/get-changed-files@v1
        with:
            format: space-delimited
            token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run ESLint
        run:  yarn lint:report ${{ steps.changed-files.outputs.added_modified }}

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v2
        with:
            repo-token: "${{ secrets.GITHUB_TOKEN }}"
            report-json: "eslint_report.json"
            only-pr-files: false

      - name: Upload ESLint report
        uses: actions/upload-artifact@v2
        with:
            name: eslint_report
            path: eslint_report.json
